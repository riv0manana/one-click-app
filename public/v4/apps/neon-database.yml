captainVersion: 4
services:
  #MINIO
  $$cap_appname-minio:
    image: quay.io/minio/minio:RELEASE.2022-10-20T00-55-09Z
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: password
    command: server /data --address :9000 --console-address ":9001"
    caproverExtra:
      notExposeAsWebApp: 'true'

  $$cap_appname-bucket:
    image: minio/mc
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: password
    entrypoint:
      - /bin/sh
      - -c
    command: |
      until (/usr/bin/mc alias set minio http://srv-captain--$$cap_appname-minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD); do
        echo 'Waiting to start minio...' && sleep 1;
      done;
      /usr/bin/mc mb minio/neon --region=eu-north-1;
      exit 0;
    depends_on:
      - $$cap_appname-minio
    caproverExtra:
      notExposeAsWebApp: 'true'

  $$cap_appname:
    image: $$cap_neon_repository/neon:$$cap_tag
    restart: always
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: password
    volumes:
      - $$cap_appname-data:/data/.neon/
    command: >
      pageserver --remote-storage="{endpoint='http://srv-captain--$$cap_appname-minio:9000', bucket_name='neon', bucket_region='eu-north-1', prefix_in_bucket:'/pageserver/'}"
    # Expose $$cap_appname publicly on port 9898:
    caproverExtra:
      containerHttpPort: '9898'
    depends_on:
      - $$cap_appname-storage-broker
      - $$cap_appname-bucket

  $$cap_appname-safekeeper1:
    image: $$cap_neon_repository/neon:$$cap_tag
    restart: always
    environment:
      SAFEKEEPER_ADVERTISE_URL: srv-captain--$$cap_appname-safekeeper1:5454
      SAFEKEEPER_ID: 1
      BROKER_ENDPOINT: http://srv-captain--$$cap_appname-storage-broker:50051
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: password
    entrypoint:
      - /bin/sh
      - -c
    command: |
      safekeeper --listen-pg=$$SAFEKEEPER_ADVERTISE_URL \
                 --listen-http='0.0.0.0:7676' \
                 --id=$$SAFEKEEPER_ID \
                 --broker-endpoint=$$BROKER_ENDPOINT \
                 -D /data \
                 --remote-storage="{endpoint='http://srv-captain--$$cap_appname-minio:9000', bucket_name='neon', bucket_region='eu-north-1', prefix_in_bucket:'/safekeeper/'}"
    depends_on:
      - $$cap_appname-storage-broker
      - $$cap_appname-bucket
    caproverExtra:
      notExposeAsWebApp: 'true'

  $$cap_appname-safekeeper2:
    image: $$cap_neon_repository/neon:$$cap_tag
    restart: always
    environment:
      SAFEKEEPER_ADVERTISE_URL: srv-captain--$$cap_appname-safekeeper2:5454
      SAFEKEEPER_ID: 2
      BROKER_ENDPOINT: http://srv-captain--$$cap_appname-storage-broker:50051
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: password
    entrypoint:
      - /bin/sh
      - -c
    command: |
      safekeeper --listen-pg=$$SAFEKEEPER_ADVERTISE_URL \
                 --listen-http='0.0.0.0:7676' \
                 --id=$$SAFEKEEPER_ID \
                 --broker-endpoint=$$BROKER_ENDPOINT \
                 -D /data \
                 --remote-storage="{endpoint='http://srv-captain--$$cap_appname-minio:9000', bucket_name='neon', bucket_region='eu-north-1', prefix_in_bucket:'/safekeeper/'}"
    depends_on:
      - $$cap_appname-storage-broker
      - $$cap_appname-bucket
    caproverExtra:
      notExposeAsWebApp: 'true'

  $$cap_appname-safekeeper3:
    image: $$cap_neon_repository/neon:$$cap_tag
    restart: always
    environment:
      SAFEKEEPER_ADVERTISE_URL: srv-captain--$$cap_appname-safekeeper3:5454
      SAFEKEEPER_ID: 3
      BROKER_ENDPOINT: http://srv-captain--$$cap_appname-storage-broker:50051
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: password
    entrypoint:
      - /bin/sh
      - -c
    command: |
      safekeeper --listen-pg=$$SAFEKEEPER_ADVERTISE_URL \
                 --listen-http='0.0.0.0:7676' \
                 --id=$$SAFEKEEPER_ID \
                 --broker-endpoint=$$BROKER_ENDPOINT \
                 -D /data \
                 --remote-storage="{endpoint='http://srv-captain--$$cap_appname-minio:9000', bucket_name='neon', bucket_region='eu-north-1', prefix_in_bucket:'/safekeeper/'}"
    depends_on:
      - $$cap_appname-storage-broker
      - $$cap_appname-bucket
    caproverExtra:
      notExposeAsWebApp: 'true'

  $$cap_appname-storage-broker:
    image: $$cap_neon_repository/neon:$$cap_tag
    restart: always
    ports:
      - 50051:50051
    command:
      - storage_broker
      - "--listen-addr=0.0.0.0:50051"

  $$cap_appname-compute:
    image: $$cap_neon_repository/compute-node-v$$cap_pg_version:$$cap_compute_tag
    restart: always
    environment:
      PG_VERSION: $$cap_pg_version
      TENANT_ID: 
      TIMELINE_ID: 
    volumes:
      - $$cap_appname-compute-spec:/var/db/postgres/specs/
      - $$cap_appname-compute-shell:/shell/
    entrypoint:
      - /shell/compute.sh
    ports:
      - 55433:55433
      - 3080:3080
    depends_on:
      - $$cap_appname-safekeeper1
      - $$cap_appname-safekeeper2
      - $$cap_appname-safekeeper3
      - $$cap_appname
    caproverExtra:
      notExposeAsWebApp: 'true'

  $$cap_appname-compute-ready:
    image: postgres:latest
    restart: always
    entrypoint:
      - /bin/bash
      - -c
    command: |
      until pg_isready -h compute -p 55433 -U cloud_admin ; do
        echo 'Waiting to start compute...' && sleep 1;
      done
    depends_on:
      - $$cap_appname-compute
    caproverExtra:
      notExposeAsWebApp: 'true'

  $$cap_appname-test-extensions:
    image: $$cap_neon_repository/neon-test-extensions-v$$cap_pg_version:$$cap_tag
    restart: always
    environment:
      PGPASSWORD: cloud_admin
    entrypoint:
      - /bin/bash
      - -c
    command: |
      sleep 1800
    depends_on:
      - $$cap_appname-compute
    caproverExtra:
      notExposeAsWebApp: 'true'

caproverOneClickApp:
  variables:
    - id: $$cap_neon_repository
      label: Neon Repository
      defaultValue: 'neondatabase'
      description: Repository for Neon images
      validRegex: /^([^\s^\/])+$/ 
    - id: $$cap_tag
      label: Neon Tag
      defaultValue: 'latest'
      description: Tag for Neon images
      validRegex: /^([^\s^\/])+$/ 
    - id: $$cap_pg_version
      label: PG Version
      defaultValue: '16'
      description: PostgreSQL version for compute node
      validRegex: /^([^\s^\/])+$/ 
    - id: $$cap_compute_tag
      label: Compute Tag
      defaultValue: 'latest'
      description: Tag for the Compute image
      validRegex: /^([^\s^\/])+$/ 
  instructions:
    start: >-
      This One-Click App deploys Non official Neonâ€™s database architecture including pageserver,
      three safekeepers, a storage broker, and a compute node.
    end: >-
      Your Neon multi-container app is now deployed!
      You can access the $$cap_appname at http://$$cap_appname.$$cap_root_domain
  displayName: 'Neon Database'
  isOfficial: false
  description: Deploys Neon with pageserver, safekeeper, storage broker, and compute node.
  documentation: >
      For more details, please refer to the Neon documentation.
